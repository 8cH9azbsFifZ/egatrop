#!/bin/sh
black="\033[0;30m"
dark_gray="\033[1;30m"
blue="\033[0;34m"
light_blue="\033[1;34m"
green="\033[0;32m"
light_green="\033[1;32m"
cyan="\033[0;36m"
light_cyan="\033[1;36m"
red="\033[0;31m"
light_red="\033[1;31m"
purple="\033[0;35m"
light_purple="\033[1;35m"
brown="\033[0;33m"
yellow="\033[1;33m"
light_gray="\033[0;37m"
white="\033[1;37m"
none="\033[0m"

DIE () { echo "$0 - $@" >&2 ; exit 1 ; }
WARN () { echo "$@" >&2 ; }

# log output with a indentation level
#     loglevel: depth of indentation
#     logfile:  where to dump
LOG () {
   [[ -z $logfile ]] && logfile="/dev/null"

   if [[ $loglevel == 3 ]]; then
      lstr="      ${brown}$@$none"
   elif [[ $loglevel == 2 ]]; then
      lstr="   ${brown}$@$none"
   else
      lstr="${brown}$@$none"
   fi

   DATE=`date +"%Y.%m.%d-%H:%M.%S"`
   echo "$lstr">&2
   echo "$DATE   $@">>$logfile
}


is_installed () {
   while [[ -n $1 ]]; do
      [[ -z $( type -p $1  ) ]] && WARN "missing: $1"
      shift 
   done
}

PAUSE () { echo -ne "${green}Pause:${none}$@"; read; }

TMP=/tmp/tmp.`basename $0`.`cat /dev/urandom | tr -cd a-z | head -c 5`

_ () {
   echo "${brown}Running:${none}$@" >&2
   $@ #2>/tmp/tmp.stderr 1>/tmp/tmp.stdout
   _error=$?
   for i in $(seq 0 $((${COLUMNS}-7))); do echo -ne " ">&2; done
   [[ ${_error} == 0 ]] && echo -ne "[${green}ok$none]">&2
   [[ ${_error} != 0 ]] && echo -ne "[${red}${_error}$none]">&2
   echo -ne "\r${brown}Running:${none}$@\n">&2
}   

_install_pkg() {
   LOG "   Installing package: $1"
   _ apt-get -y --force-yes install $1
   _ apt-get -y --force-yes build-dep $1
}

